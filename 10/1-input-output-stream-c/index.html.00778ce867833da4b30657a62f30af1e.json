{"head":{"title":"10.1 Input/Output stream C++","route":"10/1-input-output-stream-c","id":35321,"description":""},"body":"<html><head></head><body><h4>Chào các bạn đang theo dõi khóa học lập trình trực tuyến ngôn ngữ C++.</h4>\n\n<p>Trong bài học này, mình sẽ giới thiệu lại một số stream mà các bạn đã được học trong những chương đầu tiên của khóa học lập trình này và một số stream khác mà chúng ta sẽ sử dụng trong các bài học tiếp theo.</p>\n\n<h3>Input/Output streams</h3>\n\n<p>Input và output streams không được định nghĩa như là một phần của core C++, nhưng nó được cung cấp thông qua C++ standard library (được định nghĩa bên trong namespace std). Trong các bài học trước, các bạn thường sử dụng std::cin, std::cout ... trong thư viện iostream để thực hiện các thao tác input và output đơn giản. Chúng ta cùng xem một cách tổng thể các stream trong C++ được định nghĩa như thế nào.</p>\n\n<p></p><div class=\"lightbox-wrapper\"><a href=\"https://github.com/nguyenchiemminhvu/CPP-Tutorial/blob/master/10-files-streams/10-1-file-stream-cpp/0.png?raw=true\" class=\"lightbox\" title=\"0.png?raw=true\"><img src=\"https://github.com/nguyenchiemminhvu/CPP-Tutorial/blob/master/10-files-streams/10-1-file-stream-cpp/0.png?raw=true\" width=\"690\" height=\"267\"><div class=\"meta\">\n<span class=\"filename\">0.png?raw=true</span><span class=\"informations\">705x273</span><span class=\"expand\"></span>\n</div></a></div><p></p>\n\n<p>Ứng với mỗi hình chữ nhật màu trắng trong hình trên là một class trong C++. Các stream trong C++ đều có quan hệ thừa kế với class ios. Và các đối tượng std::cin, std::cout, ... đều được khai báo bên trong file iostream, do đó khi các bạn khai báo thư viện iostream thì có thể dùng các đối tượng này.</p>\n\n<p>Đa phần các thao tác liên quan đến Input/Output trong C++ đều được thực thi với các stream. Một cách trừu tượng, một stream là một chuỗi các kí tự được truy cập một cách tuần tự. Theo thời gian, một stream có thể sản xuất hoặc tiêu thụ một lượng dữ liệu không giới hạn.</p>\n\n<p>Chúng ta chia ra làm 2 loại stream chính: Input và Output.</p>\n\n<ul>\n<li><p>Input stream dùng để lưu giữ dữ liệu đầu vào từ data producer, như là bàn phím, file, hoặc một network. Ví dụ, một người dùng ấn một phím khi chương trình hiện tại không yêu cầu bất kỳ dữ liệu đầu vào nào, nó sẽ được lưu tạm thời trong Input stream.</p></li>\n<li><p>Output stream dùng để lưu giữ dữ liệu đầu ra cho một data consumer nào đó, như là màn hình, file hoặc printer. Khi chúng ta muốn ghi dữ liệu lên một output device, có thể lúc này device chưa chấp nhận dữ liệu ngay, dữ liệu sẽ được lưu tạm thời trong Output stream.</p></li>\n</ul>\n\n<p>File vừa có thể là một Input source, vừa có thể là một Output source.</p>\n\n<p>Các class istream và ostream được định nghĩa liên kết mặc định với các standard Input/Output.</p>\n\n<ul>\n<li><p>Class istream được sử dụng để trao đổi dữ liệu với các Standard Input streams. Với các input stream, extraction operator (>>) được dùng để xóa bỏ các giá trị trong stream. Điều này có nghĩa là khi người dùng ấn một phím trên bàn phím, key code sẽ được lưu giữ trong input stream, chương trình khác sẽ trích xuất dữ liệu trong input stream ra để sử dụng.</p></li>\n<li><p>Class ostream được sử dụng để trao đổi dữ liệu với các Standard Output streams. Với các output stream, insertion operator (&#x3C;&#x3C;) được dùng để thêm các giá trị vào trong stream. Điều này có nghĩa là khi các bạn đưa dữ liệu vào trong output stream, các thiết bị đầu ra sẽ sử dụng chúng.</p></li>\n</ul>\n\n<h3>Input/Output with File C++</h3>\n\n<p>Như mình đã nhắc đến ở trên, File là một đối tượng có thể được dùng làm Input source, cũng có thể dùng làm Output source. Ngôn ngữ C++ đã định nghĩa sẵn cho chúng ta các class stream dùng để thao tác Input và Output trên File như ifstream (Input file stream), ofstream (Output file stream). Những đối tượng tạo ra từ các class này sẽ đóng vai trò như một stream trung gian để truyền dữ liệu tuần tự vào file hoặc từ file ra.</p>\n\n<ul>\n<li><p>Extraction operator (>>) dùng cho các đối tượng của class ifstream dùng để trích xuất dữ liệu trong file đưa vào chương trình.</p></li>\n<li><p>Insertion operator (&#x3C;&#x3C;) dùng cho các đối tượng của class ofstream dùng để đưa dữ liệu trong chương trình vào lưu trữ trong file.</p></li>\n</ul>\n\n<p>Do class ifstream được thừa kế từ class istream nên cách hoạt động của các đối tượng của class ifstream cũng giống như đối tượng std::cin, và các đối tượng của class ofstream cũng hoạt động tương tự như đối tượng std::cout của class ostream, nên mình nghĩ trong các bài học tiếp theo các bạn có thể nắm bắt được khá nhanh các thao tác trên file sử dụng các stream này.</p>\n\n<h3>Streams for strings</h3>\n\n<p>Các đối tượng của các class stream đóng vai trò bộ truyền dẫn dữ liệu, là đối tượng trung gian giữa chương trình và các thiết bị (hoặc file). Bên cạnh đó, ngôn ngữ C++ còn định nghĩa một số class stream khác giúp chúng ta làm việc với std::string. Do std::string cũng là một kiểu dữ liệu tuần tự, nên sử dụng một stream để truyền dữ liệu vào cho std::string sẽ thuận tiện hơn. </p>\n\n<p>Stream cho std::string mà ngôn ngữ C++ cung cấp là class stringstream được định nghĩa trong thư viện sstream.</p>\n\n<hr>\n\n<h3>Tổng kết</h3>\n\n<p>Mình vừa giới thiệu đến các bạn một số class stream trong ngôn ngữ C++ mà các bạn đã được học và sẽ học trong một số bài học tiếp theo.</p>\n\n<hr>\n\n<p><strong>Hẹn gặp lại các bạn trong bài học tiếp theo trong khóa học lập trình C++ hướng thực hành.</strong></p>\n\n<p>Mọi ý kiến đóng góp hoặc thắc mắc có thể đặt câu hỏi trực tiếp tại diễn đàn.</p>\n\n<p><a title=\"DayNhauHoc\" class=\"onebox\" target=\"_blank\">www.daynhauhoc.com</a></p>\n</body></html>","__filename":"generated/35321.md","__url":"/10/1-input-output-stream-c/","__resourceUrl":"/10/1-input-output-stream-c/index.html","__dataUrl":"/10/1-input-output-stream-c/index.html.00778ce867833da4b30657a62f30af1e.json"}