{"head":{"title":"10.4 Streams for string C++","route":"10/4-streams-for-string-c","id":35649,"description":"std::string strValue; os >> strValue; std::string strValue2; os >> strValue2; // print the numbers separated by a dash std::cout &lt;&lt;…"},"body":"<html><head></head><body><h4>Chào các bạn đang theo dõi khóa học lập trình trực tuyến ngôn ngữ C++.</h4>\n\n<p>Trong các bài học trước, chúng ta thường nhập và xuất dữ liệu sử dụng các đối tượng std::cout, std::cin hay các file streams. Những đối tượng này đóng vai trò là cấu nối trung gian giữa chương trình và các thiết bị, hoặc file. Bên cạnh đó, ngôn ngữ C++ còn định nghĩa thêm một số stream sử dụng cho các đối tượng std::string cho phép chúng ta sử dụng các toán tử (&#x3C;>) để làm việc với std::string. Cũng giống như istream và ostream, string stream cung cấp một buffer để chứa dữ liệu. Tuy nhiên, string stream không kết nối đến các Input/Output channel (như keyboard, monitor, file,...).</p>\n\n<h3>Stream for string</h3>\n\n<p>Sau đây là một số stream dùng cho std::string mà ngôn ngữ C++ cung cấp sẵn: istringstream (thừa kế từ istream), ostringstream (thừa kế từ ostream) và stringstream (thừa kế từ iostream).</p>\n\n<p>Để sử dụng stringstream, chúng ta cần include thư viện sstream:</p>\n\n<p></p><pre><code class=\"hljs language-autoit\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&#x3C;sstream></span></span></code></pre>\n\n<p>Có 2 cách để đưa dữ liệu vào buffer của một đối tượng stringstream:</p>\n\n<ul>\n<li>\n<p>Sử dụng insertion operator (&#x3C;&#x3C;):</p>\n<p></p>\n<pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> ss;\nss &#x3C;&#x3C; <span class=\"hljs-string\">\"I'm learning\"</span> &#x3C;&#x3C; <span class=\"hljs-string\">\" \"</span> &#x3C;&#x3C; <span class=\"hljs-string\">\"C++ programming language\"</span> &#x3C;&#x3C; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;</code></pre>\n</li>\n<li>\n<p>Set value bằng phương thức str:</p>\n<p></p>\n<pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> ss;\nss.str(<span class=\"hljs-string\">\"I'm learning C++ programming language\\n\"</span>);</code></pre>\n</li>\n</ul>\n\n<p>Phương thức str còn được dùng để truy xuất dữ liệu trong một đối tượng stringstream (trả về kiểu std::string):</p>\n\n<p></p><pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> ss;\nss &#x3C;&#x3C; <span class=\"hljs-string\">\"I'm learning\"</span> &#x3C;&#x3C; <span class=\"hljs-string\">\" \"</span> &#x3C;&#x3C; <span class=\"hljs-string\">\"C++ programming language\"</span> &#x3C;&#x3C; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &#x3C;&#x3C; ss.str();</code></pre>\n\n<p>Để lấy dữ liệu từ buffer của đối tượng stringstream đưa vào std::string, chúng ta sử dụng insertion operator (>>):</p>\n\n<p></p><pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> os;\nos &#x3C;&#x3C; <span class=\"hljs-string\">\"12345 67.89\"</span>; <span class=\"hljs-comment\">// insert a string of numbers into the stream</span>\n\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> strValue;\nos >> strValue;\n\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> strValue2;\nos >> strValue2;\n\n<span class=\"hljs-comment\">// print the numbers separated by a dash</span>\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &#x3C;&#x3C; strValue &#x3C;&#x3C; <span class=\"hljs-string\">\" - \"</span> &#x3C;&#x3C; strValue2 &#x3C;&#x3C; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;</code></pre>\n\n<p>Cũng tương tự như khi sử dụng insertion operator (>>) của đối tượng std::cin cho kiểu dữ liệu std::string, kí tự khoảng cách không được đọc vào std::string. Chúng ta có thể sử dụng đặc điểm này để thực hiện split string như sau:</p>\n\n<p></p><pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> data = <span class=\"hljs-string\">\"Le Tran Dat\"</span>;\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> spliter;\n\nspliter &#x3C;&#x3C; data;\n\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&#x3C;<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span>> result;\n<span class=\"hljs-keyword\">while</span> (!spliter.eof())\n{\n\t<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> str;\n\tspliter >> str;\n\tresult.push_back(str);\n}\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; result.size(); i++)\n{\n\t<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &#x3C;&#x3C; result.at(i) &#x3C;&#x3C; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;\n}</code></pre>\n\n<p>Đầu tiên chúng ta đẩy tất cả các kí tự đang được lưu trong string data vào đối tượng stringstream, với mỗi lần trích xuất dữ liệu bằng extraction operator (>>) vào một string khác, chúng ta thêm string đó vào vector kết quả.</p>\n\n<h3>Convert between strings and numbers</h3>\n\n<p>Vì insertion và extraction operator có thể làm việc với các kiểu dữ liệu cơ bản, chúng ta có thể sử dụng chúng để chuyển đổi strings sang number (và ngược lại).</p>\n\n<p>Các bạn thử chạy đoạn chương trình sau để xem cách chuyển đổi từ numbers sang strings:</p>\n\n<p></p><pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> ss;\n\n<span class=\"hljs-keyword\">int</span> nValue = <span class=\"hljs-number\">12345</span>;\n<span class=\"hljs-keyword\">double</span> dValue = <span class=\"hljs-number\">67.89</span>;\nss &#x3C;&#x3C; nValue &#x3C;&#x3C; <span class=\"hljs-string\">\" \"</span> &#x3C;&#x3C; dValue;\n\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">string</span> strValue1, strValue2;\nss >> strValue1 >> strValue2;\n\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &#x3C;&#x3C; strValue1 &#x3C;&#x3C; <span class=\"hljs-string\">\" \"</span> &#x3C;&#x3C; strValue2 &#x3C;&#x3C; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;</code></pre>\n\n<p>Và đoạn chương trình sau chuyển strings về lại numbers:</p>\n\n<p></p><pre><code class=\"hljs language-cpp\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">stringstream</span> ss;\nss &#x3C;&#x3C; <span class=\"hljs-string\">\"12345 67.89\"</span>;\n\n<span class=\"hljs-keyword\">int</span> nValue;\n<span class=\"hljs-keyword\">double</span> dValue;\nss >> nValue >> dValue;\n\n<span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &#x3C;&#x3C; nValue &#x3C;&#x3C; <span class=\"hljs-string\">\" \"</span> &#x3C;&#x3C; dValue &#x3C;&#x3C; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;</code></pre>\n\n<h3>Clear stringstream for reuse</h3>\n\n<p>Chúng ta có thể dùng một đối tượng stringstream cho nhiều string khác nhau bằng cách xóa dữ liệu bên trong buffer của nó đi. Sau đây là một số cách để xóa dữ liệu trong stringstream buffer:</p>\n\n<p></p><pre><code class=\"hljs language-less\"><span class=\"hljs-attribute\">std</span>::stringstream ss;\nss<span class=\"hljs-selector-class\">.str</span>(<span class=\"hljs-string\">\"\"</span>); <span class=\"hljs-comment\">//erase the buffer</span>\nss<span class=\"hljs-selector-class\">.clear</span>(); <span class=\"hljs-comment\">//erase and reset error flags</span></code></pre>\n\n<hr>\n\n<h3>Tổng kết</h3>\n\n<p>std::stringstream là một class khá hữu ích cho việc thao tác với kiểu dữ liệu std::string và chúng ta sẽ cần dùng chúng cho các công việc sau này.</p>\n\n<hr>\n\n<p><strong>Hẹn gặp lại các bạn trong bài học tiếp theo trong khóa học lập trình C++ hướng thực hành.</strong></p>\n\n<p>Mọi ý kiến đóng góp hoặc thắc mắc có thể đặt câu hỏi trực tiếp tại diễn đàn.</p>\n\n<p><a title=\"DayNhauHoc\" class=\"onebox\" target=\"_blank\">www.daynhauhoc.com</a></p>\n</body></html>","__filename":"generated/35649.md","__url":"/10/4-streams-for-string-c/","__resourceUrl":"/10/4-streams-for-string-c/index.html","__dataUrl":"/10/4-streams-for-string-c/index.html.88022f6063c4fdfb69941f82e6b53724.json"}