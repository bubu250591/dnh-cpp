{"head":{"title":"8.3 Con trỏ và mảng kí tự","route":"8/3-con-tr-va-mang-ki-tu","id":30876,"description":"p_name[1] = 'E'; cout &lt;&lt; my_name &lt;&lt; endl; cout &lt;&lt; p_name &lt;&lt; endl; } \"Le Tran Dat\"[1] = 'E'; //this line will make…"},"body":"\n<h4>Rất vui khi nhận được sự quan tâm theo dõi của các bạn trong khóa học lập trình trực tuyến ngôn ngữ C++.</h4>\n\n<p>Trong bài học này, chúng ta sẽ cùng nhau tìm hiểu một số điểm cần lưu ý khi sử dụng con trỏ trỏ đến mảng kí tự (<strong>C-style string</strong>).</p>\n\n<h5>C-style string symbolic constants</h5>\n\n<p>C-style string là một trường hợp đặc biệt của mảng một chiều, được ngôn ngữ C++ hổ trợ một số đặc điểm nhằm giúp lập trình viên thao tác với C-style string một cách thuận tiện hơn.</p>\n\n<p>Ngoài cách khởi tạo mảng một chiều thông thường, C-style string còn có thể khởi tạo bằng một hằng chuỗi kí tự như sau:</p>\n\n<pre><code>char my_name[] = \"Le Tran Dat\";</code></pre>\n\n<p>Chuỗi kí tự \"Le Tran Dat\" được xem như là một chuỗi hằng kí tự, nó có địa chỉ cụ thể trên bộ nhớ ảo, nó được lưu trên bộ nhớ ảo, nhưng không có tên biến để truy xuất đến địa chỉ của chuỗi hằng kí tự này.  Nhưng sau khi sử dụng chuỗi hằng kí tự \"Le Tran Dat\" để khởi tạo cho mảng <code>my_name</code>, mảng <code>my_name</code> không được khai báo là kiểu chuỗi hằng kí tự (<code>const char []</code>) nên các kí tự trong mảng <code>my_name</code> hoàn toàn có thể bị thay đổi.</p>\n\n<p>Ví dụ:</p>\n\n<pre><code>char my_name[] = \"Le Tran Dat\";\nmy_name[1] = 'E'; //=&gt; \"LE Tran Dat\"</code></pre>\n\n<p>Điều này chứng tỏ mảng <code>my_name</code> được cấp phát bộ nhớ tại địa chỉ khác chuỗi hằng kí tự \"Le Tran Dat\", việc khởi tạo mảng kí tự bằng một chuỗi hằng kí tự chỉ đơn giản là copy từng kí tự của chuỗi \"Le Tran Dat\" và đưa vào mảng.</p>\n\n<p>Do đó, con trỏ kiểu char (<code>char *</code>) trỏ đến mảng <code>my_name</code> và trỏ đến vùng nhớ của chuỗi hằng kí tự \"Le Tran Dat\" là 2 trường hợp khác nhau.</p>\n\n<p>Mình lấy ví dụ một con trỏ kiểu char (<code>char *</code>) trỏ đến mảng <code>my_name</code>:</p>\n\n<pre><code>char my_name[] = \"Le Tran Dat\";\nchar *p_name = my_name;\n\np_name[1] = 'E';\ncout &lt;&lt; my_name &lt;&lt; endl;</code></pre>\n\n<p>Kết quả in ra màn hình là:</p>\n\n<pre><code>LE Tran Dat</code></pre>\n\n<p>Như vậy, con trỏ <code>p_name</code> sau khi trỏ đến mảng <code>my_name</code> thì có thể thay đổi giá trị bên trong vùng nhớ mà mảng <code>my_name</code> đang nắm giữ, vì vùng nhớ này không phải là vùng nhớ hằng.</p>\n\n<p>Trường hợp tiếp theo, mình sẽ cho một con trỏ kiểu char (char *) trỏ trực tiếp đến chuỗi hằng kí tự:</p>\n\n<pre><code>char *p_name = \"Le Tran Dat\";\np_name[1] = 'E';\n\ncout &lt;&lt; p_name &lt;&lt; endl;</code></pre>\n\n<p>Khi nhấn F5 để Debug đoạn chương trình này, Visual studio 2015 đưa ra thông báo xảy ra xung đột vùng nhớ.</p>\n\n<p><img src=\"https://github.com/nguyenchiemminhvu/CPP-Tutorial/blob/master/8-con-tro/8-3-con-tro-va-mang-ki-tu/0.png?raw=true\" width=\"545\" height=\"311\"></p>\n\n<p>Nguyên nhân là do vùng nhớ lưu trữ chuỗi kí tự \"Le Tran Dat\" là vùng nhớ hằng, giá trị bên trong vùng nhớ này không thể thay đổi, trong khi đó lệnh <code>p_name[1] = 'E';</code> cố gắng thay đổi giá trị bên trong vùng nhớ hằng.</p>\n\n<p>Đến đây có thể có một số bạn thắc mắc về địa chỉ của chuỗi hằng kí tự \"Le Tran Dat\" mà mình sử dụng. Mặc dù chuỗi hằng kí tự không được khai báo như một biến thông thường, nhưng nó được tạo ra và có địa chỉ cụ thể trên vùng nhớ ảo. Chúng ta truy xuất địa chỉ của chuỗi hằng kí tự bằng chính nội dung của chuỗi đó:</p>\n\n<pre><code>int main()\n{\n\tcout &lt;&lt; &amp;(\"Le Tran Dat\") &lt;&lt; endl;\n\tcout &lt;&lt; &amp;(\"LE TRAN DAT\") &lt;&lt; endl;\n\n\tsystem(\"pause\");\n\treturn 0;\n}</code></pre>\n\n<p>Kết quả của đoạn chương trình này trên máy tính của mình là:</p>\n\n<pre><code>00EF8CC8\n00EF8B30</code></pre>\n\n<p>Như vậy, mỗi chuỗi hằng kí tự có nội dung khác nhau sẽ có một địa chỉ khác nhau. Chúng ta có thể sử dụng nội dung của chuỗi hằng kí tự này như mảng một chiều, nhưng không thể thay đổi nội dung của nó.</p>\n\n<pre><code>for (int i = 0; i &lt; strlen(\"Le Tran Dat\"); i++)\n{\n\tcout &lt;&lt; \"Le Tran Dat\"[i];\n}\ncout &lt;&lt; endl;\n\n\"Le Tran Dat\"[1] = 'E'; //this line will make an error</code></pre>\n\n<h5>std::cout and char pointers</h5>\n\n<p>Với các mảng một chiều có kiểu dữ liệu khác, để xem được nội dung bên trong mảng, chúng ta cần sử dụng vòng lặp để duyệt từng phần tử bên trong mảng. Ví dụ:</p>\n\n<pre><code>float arr[] = { 2.5, 1.6, 0.2, 3.14 };\nint size = sizeof(arr) / sizeof(arr[0]);\n\nfor (int i = 0; i &lt; size; i++)\n{\n\tcout &lt;&lt; arr[i] &lt;&lt; \" \";\n}</code></pre>\n\n<p>Đối với mảng kí tự (<strong>C-style string</strong>) chúng ta có thể in toàn bộ nội dung của mảng bằng cách sử dụng đối tượng <strong>cout</strong> như sau:</p>\n\n<pre><code>char str[] = \"This is an example string\";\ncout &lt;&lt; str &lt;&lt; endl;</code></pre>\n\n<p>Đối với các kiểu dữ liệu không phải kiểu con trỏ char (<code>char *</code>), đối tượng <strong>cout</strong> chỉ in ra địa chỉ của mảng (vì <code>arr</code> tương đương với <code>&amp;arr</code>), nhưng với kiểu con trỏ char (<code>char *</code>), đối tượng cout có cách định nghĩa khác.</p>\n\n<p>Thực ra đối tượng <strong>cout</strong> chỉ hổ trợ cho kiểu con trỏ char (<code>char *</code>), nhưng vì sử dụng tên mảng <code>str</code> tương đương với <code>&amp;str</code>. Như các bạn biết, toán tử <strong>address-of</strong> trả về kiểu con trỏ, nên <code>str</code> truyền vào đối tượng <strong>cout</strong> được xem là con trỏ kiểu char (<code>char *</code>).</p>\n\n<pre><code>char str[] = \"Hello!\";\nchar *p_str = str;\n\ncout &lt;&lt; str &lt;&lt; endl;\ncout &lt;&lt; p_str &lt;&lt; endl;</code></pre>\n\n<p>Do đó, đoạn chương trình này in ra 2 dòng có nội dung giống nhau.</p>\n\n<p>Điều này dẫn để một hệ quả, chúng ta không thể in ra địa chỉ của một biến kiểu kí tự (<code>char</code>).</p>\n\n<pre><code>char ch = 'A';\ncout &lt;&lt; &amp;ch &lt;&lt; endl;</code></pre>\n\n<p>Trên máy tính của mình, kết quả cho ra màn hình là:</p>\n\n<p><div class=\"lightbox-wrapper\"><a href=\"https://github.com/nguyenchiemminhvu/CPP-Tutorial/blob/master/8-con-tro/8-3-con-tro-va-mang-ki-tu/1.png?raw=true\" class=\"lightbox\" title=\"1.png?raw=true\" rel=\"nofollow\"><img src=\"https://github.com/nguyenchiemminhvu/CPP-Tutorial/blob/master/8-con-tro/8-3-con-tro-va-mang-ki-tu/1.png?raw=true\" width=\"690\" height=\"332\"><div class=\"meta\">\n<span class=\"filename\">1.png?raw=true</span><span class=\"informations\">796x384</span><span class=\"expand\"></span>\n</div></a></div></p>\n\n<p>Vì <code>&amp;ch</code> trả về dữ liệu kiểu (<code>char *</code>) nên đối tượng <strong>cout</strong> xem nó như là <strong>C-style string</strong> nên in ra kí tự A và tiếp tục cho đến khi gặp giá trị '\\0'.</p>\n\n<hr>\n\n<p><strong>Hẹn gặp lại các bạn trong bài học tiếp theo trong khóa học lập trình C++ hướng thực hành.</strong></p>\n\n<p>Mọi ý kiến đóng góp hoặc thắc mắc có thể đặt câu hỏi trực tiếp tại diễn đàn.</p>\n\n<p><a title=\"DayNhauHoc\" class=\"onebox\" target=\"_blank\">www.daynhauhoc.com</a></p>\n\n<hr>\n\n<h3>Link Videos khóa học</h3>\n\n<p><a href=\"https://www.udemy.com/c-co-ban-danh-cho-nguoi-moi-hoc-lap-trinh/learn/v4/overview\" class=\"onebox\" target=\"_blank\" rel=\"nofollow\">https://www.udemy.com/c-co-ban-danh-cho-nguoi-moi-hoc-lap-trinh/learn/v4/overview</a></p>\n","__filename":"generated/30876.md","__url":"/8/3-con-tr-va-mang-ki-tu/","__resourceUrl":"/8/3-con-tr-va-mang-ki-tu/index.html","__dataUrl":"/8/3-con-tr-va-mang-ki-tu/index.html.dc406539fbe2db6bafb4f3a63ad20fbc.json"}